{"version":3,"sources":["assets/itn_logo.svg","assets/east_logo.svg","assets/gc_logo.svg","assets/slides/slide01.jpg","assets/slides/slide02.jpg","assets/slides/slide03.jpg","assets/slides/slide04.jpg","assets/slides/slide05.jpg","assets/policies/policy01.jpg","assets/policies/policy02.jpg","assets/policies/policy03.jpg","assets/policies/policy04.jpg","assets/policies/policy05.jpg","assets/policies/policy06.jpg","components/HeroBlock/HeroBlock.js","components/Footer/Footer.js","components/Policies/PolicyCard.js","components/Policies/Policies.js","components/MapBlock/MapBlock.js","components/Facts/Facts.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HeroBlock","title","links","logoImages","logos","map","el","index","className","src","alt","key","navMenu","href","Footer","id","PolicyCard","image","tooltip","useState","isTooltipVisible","setTooltipVisibility","onMouseEnter","onMouseLeave","Policies","subtitle","policyCards","cards","MapBlock","capture","mapboxgl","accessToken","mapContainer","useRef","lng","lat","zoom","mapState","useEffect","Map","container","current","style","center","ref","SwiperCore","use","Pagination","Navigation","Facts","slides","description","pagination","clickable","renderBullet","navigation","nextEl","prevEl","spaceBetween","slidesPerView","slidesPerGroup","App","partners","east_logo","itn_logo","gc_logo","navLinks","require","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c48ee388.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/itn_logo.2f311a05.svg\";","module.exports = __webpack_public_path__ + \"static/media/east_logo.341a487c.svg\";","module.exports = __webpack_public_path__ + \"static/media/gc_logo.0662d9de.svg\";","module.exports = __webpack_public_path__ + \"static/media/slide01.5574d6ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide02.261b9856.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide03.54f87ec4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide04.f084f5ed.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide05.d3a6a7b0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/policy01.bfe2e718.jpg\";","module.exports = __webpack_public_path__ + \"static/media/policy02.9349a1f8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/policy03.ecbc7a42.jpg\";","module.exports = __webpack_public_path__ + \"static/media/policy04.d37cb533.jpg\";","module.exports = __webpack_public_path__ + \"static/media/policy05.447dd7f3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/policy06.4485f9ba.jpg\";","import React from 'react';\r\nimport './HeroBlock.scss';\r\n\r\nconst HeroBlock = ( {title, links, logos} ) => {\r\n    const logoImages = logos.map((el, index) => <img className='hero-partners-logo' src={el} alt=\"partner logo\" key={index}/>);\r\n    const navMenu = links.map((el, index) => <a className='hero-navigation-item' href={el.href} key={index}>{el.title}</a>);\r\n    return (\r\n        <section className=\"hero\">\r\n            <div className=\"container\">\r\n                <div className=\"hero-partners\">\r\n                    { logoImages }\r\n                </div>\r\n                <nav className=\"hero-navigation\">\r\n                    {navMenu}\r\n                </nav>\r\n                <h1 className=\"hero-title\">\r\n                    { title }\r\n                </h1>\r\n                <a className=\"hero-link\" href=\".\">Отследить</a>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default HeroBlock;","import React from 'react';\r\nimport './Footer.scss';\r\n\r\nconst Footer = ( {links, logos} ) => {\r\n    const logoImages = logos.map((el, index) => <img className='footer-partners-logo' src={el} alt=\"partner logo\" key={index}/>);\r\n    const navMenu = links.map((el, index) => <a className='footer-middle-navigation-item' href={el.href} key={index}>{el.title}</a>);\r\n    return (\r\n        <section id=\"footer\" className=\"footer container\">\r\n            <div className=\"footer-partners\">\r\n                { logoImages }\r\n            </div>\r\n            <div className=\"footer-middle\">\r\n                <nav className=\"footer-middle-navigation\">\r\n                    {navMenu}\r\n                </nav>\r\n                <p className=\"footer-middle-credits\">Сайт был разработан <span className=\"footer-credits\">Михаилом Алёшиным</span> в учебных целях, в рамках образовательной программы IT nation. Дизайн сайта создан <span className=\"footer-credits\">Валерией Бубырь</span>.</p>\r\n            </div>\r\n            <p className=\"rights\">\r\n                2020, Все права защищены\r\n            </p>\r\n            <div className=\"rights\">\r\n                Согласие на обработку персональных данных<br/>\r\n                Политика конфиденциальности\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React, { useState } from 'react';\r\n\r\nconst PolicyCard = ({image, title, tooltip}) => {\r\n\r\n    const [isTooltipVisible, setTooltipVisibility] = useState(false);\r\n    const showTooltip = () => setTooltipVisibility(true);\r\n    const hideTooltip = () => setTooltipVisibility(false);\r\n\r\n    return(\r\n        <section className=\"policy-card\" onMouseEnter = { showTooltip } onMouseLeave = { hideTooltip }>\r\n            <img className=\"policy-card-image\" src={image} alt={title} />\r\n            <h4 className={ isTooltipVisible ? \"policy-card-title policy-card-title-active\" : \"policy-card-title\" } >{title}</h4>\r\n            {\r\n                isTooltipVisible && <p className=\"policy-card-tooltip\">{tooltip}</p>\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default PolicyCard;","import React from 'react';\r\nimport PolicyCard from './PolicyCard';\r\nimport './Policies.scss';\r\n\r\nconst Policies = ({title, subtitle, cards}) => {\r\n    const policyCards = cards.map(el => \r\n        <PolicyCard key = {el.id}\r\n                    image = {el.image}\r\n                    title = {el.title}\r\n                    tooltip = {el.tooltip}>\r\n                        <p>{title}</p>\r\n        </PolicyCard>\r\n    );\r\n\r\n    return(\r\n        <section className=\"policies container\">\r\n            <h2 className=\"policies-title\">{title}</h2>\r\n            <h4 className=\"policies-subtitle\">{subtitle}</h4>\r\n            <div className='policies-cards'>{policyCards}</div>\r\n            \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Policies;","import React, { useState, useEffect, useRef } from 'react';\r\nimport './MapBlock.scss';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\n\r\n\r\n\r\nconst MapBlock = ({title, capture}) => {\r\n    \r\n    mapboxgl.accessToken = 'pk.eyJ1IjoiYXJtYW5pYWsiLCJhIjoiY2tmb2RieGt6MGpnMzJ6b2V2am00YTEyZSJ9.lPE1wAp1CvNDpI4C57mUNQ';\r\n    \r\n    const mapContainer = useRef(null);\r\n\r\n    const [mapState] = useState({\r\n        lng: 32,\r\n        lat: 48.5,\r\n        zoom: 4.8\r\n    });\r\n\r\n    useEffect(() => {\r\n        new mapboxgl.Map({\r\n            container: mapContainer.current,\r\n            style: 'mapbox://styles/mapbox/outdoors-v11',\r\n            center: [mapState.lng, mapState.lat],\r\n            zoom: mapState.zoom\r\n            });\r\n        });\r\n\r\n    return(\r\n        <section className='map'>\r\n            <div className='container'>\r\n                <h2 className='map-title'>\r\n                    { title }\r\n                </h2>\r\n                <div className=\"map-container\">\r\n                    <div ref={mapContainer} className=\"mapContainer\" />\r\n                </div>\r\n                <p className=\"map-capture\">\r\n                    { capture }\r\n                </p>\r\n            </div>\r\n        </section>\r\n    )\r\n};\r\n\r\nexport default MapBlock;","import React from 'react';\r\nimport './Facts.scss';\r\nimport SwiperCore, { Pagination, Navigation } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\n\r\nSwiperCore.use([Pagination, Navigation]);\r\n\r\nconst Facts = ({title, slides}) => {\r\n    const cards = slides.map((el, index) => \r\n        <SwiperSlide className=\"facts-slide\" key={index}>\r\n            <img className='facts-slide-img' src={el.image} alt={el.description}/>\r\n            <p className='facts-slide-paragraph'>{el.description}</p>\r\n            <p className=\"facts-slide-key\">{el.id}</p>\r\n        </SwiperSlide>);\r\n    return(\r\n        <section className='facts container'>\r\n            <h2 className='facts-title'> { title }</h2>\r\n            <div className=\"swiper-button-prev\"/>\r\n            <Swiper\r\n                pagination={{\r\n                    el: '.facts-pagination',\r\n                    clickable: true,\r\n                    renderBullet: function (index, className) {\r\n                        return `<span class=\"facts-pagination-bullet ${className}\"></span>`\r\n                    },\r\n                }}\r\n                navigation={{\r\n                    nextEl: '.swiper-button-next',\r\n                    prevEl: '.swiper-button-prev'\r\n                }}\r\n                spaceBetween={40}\r\n                slidesPerView={3}\r\n                slidesPerGroup={3}>\r\n                {cards}\r\n            </Swiper>\r\n            <div className=\"swiper-button-next\"/>\r\n            <div className=\"facts-pagination\"/>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Facts;","import React from 'react';\nimport HeroBlock from './components/HeroBlock/HeroBlock';\nimport Footer from './components/Footer/Footer';\nimport Policies from './components/Policies/Policies';\nimport MapBlock from './components/MapBlock/MapBlock';\nimport './App.scss';\nimport itn_logo from './assets/itn_logo.svg';\nimport east_logo from './assets/east_logo.svg';\nimport gc_logo from './assets/gc_logo.svg';\nimport Facts from './components/Facts/Facts';\n\nfunction App() {\n  const partners = [east_logo, itn_logo, gc_logo];\n  const title = 'Качество атмосферного воздуха и здоровье';\n  const navLinks = [\n    {\n      title: 'Основные факты',\n      href: '#facts'\n    },\n    {\n      title: 'Индекс качества воздуха',\n      href: '#index'\n    },\n    {\n      title: 'Политика по уменьшению загрязнений',\n      href: '#policy'\n    }\n  ];\n\n  const slides = [\n    {\n      id: '01',\n      image: require('./assets/slides/slide01.jpg'),\n      description: 'Женщины и дети – главные жертвы загрязнения воздуха'\n    },\n    {\n      id: '02',\n      image: require('./assets/slides/slide02.jpg'),\n      description: 'Защитники окружающей среды подвергаются преследованиям'\n    },\n    {\n      id: '03',\n      image: require('./assets/slides/slide03.jpg'),\n      description: 'Загрязнение воздуха – нарушение прав человека'\n    },\n    {\n      id: '04',\n      image: require('./assets/slides/slide04.jpg'),\n      description: '4,2 миллиона случаев преждевременной смерти людей из-за загрязнения атмосферного воздуха'\n    },\n    {\n      id: '05',\n      image: require('./assets/slides/slide05.jpg'),\n      description: 'Согласно оценкам, суммарный объем затрат в связи с загрязнением воздуха превышает 5 трлн долл. в год.'\n    },\n  ];\n\n  const cards = [\n    {\n      id: 1,\n      image: require('./assets/policies/policy01.jpg'),\n      title: 'Промышленность',\n      tooltip: 'Чистые технологии, способствующие уменьшению выбросов из промышленных дымовых труб; улучшенная утилизация городских и сельскохозяйственных отходов, включая каптаж (улавливание) метана, выделяемого в местах утилизации отходов, в качестве варианта, альтернативного сжиганию (для использования в качестве биогаза)',\n    },\n    {\n      id: 2,\n      image: require('./assets/policies/policy02.jpg'),\n      title: 'Транспорт',\n      tooltip: 'Переход к чистым способам выработки энергии; уделение приоритетного внимания скоростному городскому транспорту, пешеходным и велосипедным сетям в городах, а также железнодорожным междугородным грузовым и пассажирским перевозкам; переход к использованию более чистых большегрузных дизельных транспортных средств и автомобилей с низким уровнем выбросов, а также более чистых видов топлива, включая топливо со сниженной концентрацией серы',\n    },\n    {\n      id: 3,\n      image: require('./assets/policies/policy03.jpg'),\n      title: 'Городское планирование',\n      tooltip: 'Улучшение энергетической эффективности зданий и обеспечение более зеленых и компактных и тем самым более энергоэффективных городов',\n    },\n    {\n      id: 4,\n      image: require('./assets/policies/policy04.jpg'),\n      title: 'Энергия',\n      tooltip: 'Обеспечение доступа к недорогостоящим источникам энергии в быту для приготовления пищи, отопления и освещения',\n    },\n    {\n      id: 5,\n      image: require('./assets/policies/policy05.jpg'),\n      title: 'Энергетика',\n      tooltip: 'Более широкое использование видов топлива с низким уровнем выбросов и возобновляемых источников энергии, не основанных на сжигании (таких как энергия солнца, ветра или гидроэнергия); комбинированная выработка тепла и энергии; и распределенная выработка энергии (например, энергетические минисистемы и размещаемые на крыше установки для выработки энергии из солнечной энергии)',\n    },\n    {\n      id: 6,\n      image: require('./assets/policies/policy06.jpg'),\n      title: 'Утилизация отходов',\n      tooltip: 'стратегии уменьшения отходов, сортировки отходов, рециклирования, повторного использования или переработки отходов; а также улучшенные методы биологической утилизации отходов, такие как анаэробная переработка отходов для производства биогаза, являются практически осуществимыми, недорогими альтернативными вариантами открытому сжиганию твердых отходов',\n    }\n  ];\n  \n  return (\n    <>\n      <HeroBlock title = { title }\n                  logos = { partners }\n                  links = { navLinks } />\n      <Facts title = { 'Основные факты' }\n              slides = { slides } />\n      <MapBlock title = { 'Индекс качества воздуха в режиме реального времени' }\n                capture = { 'Для того чтобы узнать уровень загрязнения атмосферного воздуха (качество воздуха) в городе Киев, необходимо выбрать соответствующую станцию мониторинга на карте выше.' } />\n      <Policies title = { 'Политика по уменьшению загрязнений' }\n                subtitle = { 'Есть много примеров успешной политики по уменьшению загрязнения воздуха в таких секторах, как транспорт, городское планирование, энергетика и промышленность:' }\n                cards = { cards } />\n      <Footer logos = { partners }\n              links = { navLinks } />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}