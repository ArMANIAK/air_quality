{"version":3,"sources":["assets/itn_logo.svg","assets/east_logo.svg","assets/gc_logo.svg","assets/slides/slide01.jpg","assets/slides/slide02.jpg","assets/slides/slide03.jpg","assets/slides/slide04.jpg","assets/slides/slide05.jpg","assets/policies/policy01.jpg","assets/policies/policy02.jpg","assets/policies/policy03.jpg","assets/policies/policy04.jpg","assets/policies/policy05.jpg","assets/policies/policy06.jpg","components/HeroBlock/HeroBlock.js","components/Footer/Footer.js","components/Policies/PolicyCard.js","components/Policies/Policies.js","components/MapBlock/MapBlock.js","components/Facts/Facts.js","App.js","helpers/Resize.js","serviceWorker.js","index.js"],"names":["module","exports","HeroBlock","title","links","logos","logoImages","winSize","map","el","index","className","src","alt","key","navMenu","href","useState","visibility","setVisibility","onClick","Footer","id","PolicyCard","image","tooltip","isTooltipVisible","setTooltipVisibility","onMouseEnter","onMouseLeave","Policies","subtitle","policyCards","cards","MapBlock","capture","mapboxgl","accessToken","mapContainer","useRef","lng","lat","zoom","mapState","useEffect","Map","container","current","style","center","ref","SwiperCore","use","Pagination","Navigation","Facts","slides","description","pagination","clickable","renderBullet","navigation","nextEl","prevEl","spaceBetween","slidesPerView","slidesPerGroup","App","window","screen","availWidth","setWinSize","handleResize","addEventListener","console","log","removeEventListener","useScreenSize","partners","east_logo","itn_logo","gc_logo","navLinks","require","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ef44045b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/itn_logo.899cd278.svg\";","module.exports = __webpack_public_path__ + \"static/media/east_logo.8dd4ef71.svg\";","module.exports = __webpack_public_path__ + \"static/media/gc_logo.e60be19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/slide01.5574d6ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide02.261b9856.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide03.54f87ec4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide04.f084f5ed.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide05.d3a6a7b0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/policy01.bfe2e718.jpg\";","module.exports = __webpack_public_path__ + \"static/media/policy02.9349a1f8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/policy03.ecbc7a42.jpg\";","module.exports = __webpack_public_path__ + \"static/media/policy04.d37cb533.jpg\";","module.exports = __webpack_public_path__ + \"static/media/policy05.447dd7f3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/policy06.4485f9ba.jpg\";","import React, { useState } from 'react';\r\nimport './HeroBlock.scss';\r\n\r\nconst HeroBlock = ( {title, links, logos, winSize} ) => {\r\n    const logoImages = logos.map((el, index) => <img className='hero-partners-logo' src={el} alt=\"partner logo\" key={index}/>);\r\n    const navMenu = links.map((el, index) => <a className='hero-navigation-item' href={el.href} key={index}>{el.title}</a>);\r\n    const [visibility, setVisibility] = useState(false);\r\n    \r\n    return (\r\n        <section className=\"hero\">\r\n            <div className=\"container\">\r\n                {\r\n                    visibility &&\r\n                    <div className=\"hero-hamburger\">\r\n                    <div className=\"hero-hamburger-control\">\r\n                        <span className=\"hero-hamburger-control-X\" onClick = {() => setVisibility(false)}>&#10005;</span>\r\n                        <span className=\"hero-hamburger-control-hamIcon\" onClick = {() => setVisibility(false)}>&#x2630;</span>\r\n                    </div>\r\n                     \r\n                        <div className=\"hero-hamburger-navigation\">\r\n                            { navMenu }\r\n                        </div>\r\n                        <div className=\"rights\">\r\n                            <p>2020, Все права защищены</p>\r\n                            <a className=\"rights\" href=\".\">Согласие на обработку персональных данных</a>\r\n                            <a className=\"rights\" href=\".\">Политика конфиденциальности</a>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                <div className=\"hero-partners\">\r\n                    { logoImages }\r\n                    <span className=\"hero-hamburger-control-hamIcon\" onClick = {() => setVisibility(true)}>&#x2630;</span>\r\n                </div>\r\n                <nav className=\"hero-navigation\">\r\n                    {navMenu}\r\n                </nav>\r\n                <h1 className=\"hero-title\">\r\n                    { title }\r\n                </h1>\r\n                <a className=\"hero-link\" href=\".\">Отследить</a>\r\n                <a className=\"hero-button\" href=\"#facts\" />                \r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default HeroBlock;","import React from 'react';\r\nimport './Footer.scss';\r\n\r\nconst Footer = ( {links, logos} ) => {\r\n    const logoImages = logos.map((el, index) => <img className='footer-partners-logo' src={el} alt=\"partner logo\" key={index}/>);\r\n    const navMenu = links.map((el, index) => <a className='footer-middle-navigation-item' href={el.href} key={index}>{el.title}</a>);\r\n    return (\r\n        <section id=\"footer\" className=\"footer\">\r\n            <div className=\"footer-partners\">\r\n                { logoImages }\r\n            </div>\r\n            <div className=\"footer-middle\">\r\n                <nav className=\"footer-middle-navigation\">\r\n                    {navMenu}\r\n                </nav>\r\n                <p className=\"footer-middle-credits\">Сайт был разработан <span className=\"footer-credits\">Михаилом Алёшиным</span> в учебных целях, в рамках образовательной программы IT nation. Дизайн сайта создан <span className=\"footer-credits\">Валерией Бубырь</span>.</p>\r\n            </div>\r\n            <p className=\"rights\">\r\n                2020, Все права защищены\r\n            </p>\r\n            <div className=\"rights\">\r\n                Согласие на обработку персональных данных<br/>\r\n                Политика конфиденциальности\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React, { useState } from 'react';\r\n\r\nconst PolicyCard = ({image, title, tooltip}) => {\r\n\r\n    const [isTooltipVisible, setTooltipVisibility] = useState(false);\r\n    const showTooltip = () => setTooltipVisibility(true);\r\n    const hideTooltip = () => setTooltipVisibility(false);\r\n\r\n    return(\r\n        <section className=\"policy-card\" onMouseEnter = { showTooltip } onMouseLeave = { hideTooltip }>\r\n            <img className=\"policy-card-image\" src={image} alt={title} />\r\n            <h4 className={ isTooltipVisible ? \"policy-card-title policy-card-title-active\" : \"policy-card-title\" } >{title}</h4>\r\n            {\r\n                isTooltipVisible && <p className=\"policy-card-tooltip\">{tooltip}</p>\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default PolicyCard;","import React from 'react';\r\nimport PolicyCard from './PolicyCard';\r\nimport './Policies.scss';\r\n\r\nconst Policies = ({title, subtitle, cards}) => {\r\n    const policyCards = cards.map(el => \r\n        <PolicyCard key = {el.id}\r\n                    image = {el.image}\r\n                    title = {el.title}\r\n                    tooltip = {el.tooltip}>\r\n                        <p>{title}</p>\r\n        </PolicyCard>\r\n    );\r\n\r\n    return(\r\n        <section className=\"policies\" id=\"policy\">\r\n            <h2 className=\"policies-title\">{title}</h2>\r\n            <h4 className=\"policies-subtitle\">{subtitle}</h4>\r\n            <div className='policies-cards'>{policyCards}</div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Policies;","import React, { useState, useEffect, useRef } from 'react';\r\nimport './MapBlock.scss';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\n\r\n\r\n\r\nconst MapBlock = ({title, capture}) => {\r\n    \r\n    mapboxgl.accessToken = 'pk.eyJ1IjoiYXJtYW5pYWsiLCJhIjoiY2tmb2RieGt6MGpnMzJ6b2V2am00YTEyZSJ9.lPE1wAp1CvNDpI4C57mUNQ';\r\n    \r\n    const mapContainer = useRef(null);\r\n\r\n    const [mapState] = useState({\r\n        lng: 32,\r\n        lat: 48.5,\r\n        zoom: 4.8\r\n    });\r\n\r\n    useEffect(() => {\r\n        new mapboxgl.Map({\r\n            container: mapContainer.current,\r\n            style: 'mapbox://styles/mapbox/outdoors-v11',\r\n            center: [mapState.lng, mapState.lat],\r\n            zoom: mapState.zoom\r\n            });\r\n        });\r\n\r\n    return(\r\n        <section className='map' id=\"map\">\r\n            <div className=\"container\">\r\n                <h2 className='map-title'>\r\n                    { title }\r\n                </h2>\r\n                <div className=\"map-container\">\r\n                    <div ref={mapContainer} className=\"mapContainer\" />\r\n                </div>\r\n                <p className=\"map-capture\">\r\n                    { capture }\r\n                </p>                \r\n            </div>\r\n        </section>\r\n    )\r\n};\r\n\r\nexport default MapBlock;","import React, { useEffect, useState }  from 'react';\r\nimport './Facts.scss';\r\nimport SwiperCore, { Pagination, Navigation } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { useScreenSize } from '../../helpers/Resize';\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\n\r\nSwiperCore.use([Pagination, Navigation]);\r\n\r\nconst Facts = ({title, slides, winSize}) => {\r\n    const cards = slides.map((el, index) => \r\n        <SwiperSlide className=\"facts-slide\" key={index}>\r\n            <img className='facts-slide-img' src={el.image} alt={el.description}/>\r\n            <p className='facts-slide-paragraph'>{el.description}</p>\r\n            <p className=\"facts-slide-key\">{el.id}</p>\r\n        </SwiperSlide>);\r\n\r\n    return(\r\n        <section className='facts' id=\"facts\">\r\n            <div className=\"container\">\r\n                <h2 className='facts-title'>{ title }</h2>\r\n                <div className=\"swiper-button-prev\"/>\r\n                <Swiper\r\n                    pagination={{\r\n                        el: '.facts-pagination',\r\n                        clickable: true,\r\n                        renderBullet: function (index, className) {\r\n                            return `<span class=\"facts-pagination-bullet ${className}\"></span>`\r\n                        },\r\n                    }}\r\n                    navigation={{\r\n                        nextEl: '.swiper-button-next',\r\n                        prevEl: '.swiper-button-prev'\r\n                    }}\r\n                    spaceBetween={40}\r\n                    slidesPerView={ winSize > 425 ? 3 : 1 }\r\n                    slidesPerGroup={ winSize > 425 ? 3 : 1 }>\r\n                    {cards}\r\n                </Swiper>\r\n                <div className=\"swiper-button-next\"/>\r\n                <div className=\"facts-pagination\"/>                \r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Facts;","import React from 'react';\r\nimport HeroBlock from './components/HeroBlock/HeroBlock';\r\nimport Footer from './components/Footer/Footer';\r\nimport Policies from './components/Policies/Policies';\r\nimport MapBlock from './components/MapBlock/MapBlock';\r\nimport './App.scss';\r\nimport itn_logo from './assets/itn_logo.svg';\r\nimport east_logo from './assets/east_logo.svg';\r\nimport gc_logo from './assets/gc_logo.svg';\r\nimport Facts from './components/Facts/Facts';\r\nimport { useScreenSize } from './helpers/Resize';\r\n\r\nfunction App() {\r\n  const winSize = useScreenSize();\r\n  const partners = [east_logo, itn_logo, gc_logo];\r\n  const title = 'Качество атмосферного воздуха и здоровье';\r\n  const navLinks = [\r\n    {\r\n      title: 'Основные факты',\r\n      href: '#facts'\r\n    },\r\n    {\r\n      title: 'Индекс качества воздуха',\r\n      href: '#map'\r\n    },\r\n    {\r\n      title: 'Политика по уменьшению загрязнений',\r\n      href: '#policy'\r\n    }\r\n  ];\r\n\r\n  const slides = [\r\n    {\r\n      id: '01',\r\n      image: require('./assets/slides/slide01.jpg'),\r\n      description: 'Женщины и дети – главные жертвы загрязнения воздуха'\r\n    },\r\n    {\r\n      id: '02',\r\n      image: require('./assets/slides/slide02.jpg'),\r\n      description: 'Защитники окружающей среды подвергаются преследованиям'\r\n    },\r\n    {\r\n      id: '03',\r\n      image: require('./assets/slides/slide03.jpg'),\r\n      description: 'Загрязнение воздуха – нарушение прав человека'\r\n    },\r\n    {\r\n      id: '04',\r\n      image: require('./assets/slides/slide04.jpg'),\r\n      description: '4,2 миллиона случаев преждевременной смерти людей из-за загрязнения атмосферного воздуха'\r\n    },\r\n    {\r\n      id: '05',\r\n      image: require('./assets/slides/slide05.jpg'),\r\n      description: 'Согласно оценкам, суммарный объем затрат в связи с загрязнением воздуха превышает 5 трлн долл. в год.'\r\n    },\r\n  ];\r\n\r\n  const cards = [\r\n    {\r\n      id: 1,\r\n      image: require('./assets/policies/policy01.jpg'),\r\n      title: 'Промышленность',\r\n      tooltip: 'Чистые технологии, способствующие уменьшению выбросов из промышленных дымовых труб; улучшенная утилизация городских и сельскохозяйственных отходов, включая каптаж (улавливание) метана, выделяемого в местах утилизации отходов, в качестве варианта, альтернативного сжиганию (для использования в качестве биогаза)',\r\n    },\r\n    {\r\n      id: 2,\r\n      image: require('./assets/policies/policy02.jpg'),\r\n      title: 'Транспорт',\r\n      tooltip: 'Переход к чистым способам выработки энергии; уделение приоритетного внимания скоростному городскому транспорту, пешеходным и велосипедным сетям в городах, а также железнодорожным междугородным грузовым и пассажирским перевозкам; переход к использованию более чистых большегрузных дизельных транспортных средств и автомобилей с низким уровнем выбросов, а также более чистых видов топлива, включая топливо со сниженной концентрацией серы',\r\n    },\r\n    {\r\n      id: 3,\r\n      image: require('./assets/policies/policy03.jpg'),\r\n      title: 'Городское планирование',\r\n      tooltip: 'Улучшение энергетической эффективности зданий и обеспечение более зеленых и компактных и тем самым более энергоэффективных городов',\r\n    },\r\n    {\r\n      id: 4,\r\n      image: require('./assets/policies/policy04.jpg'),\r\n      title: 'Энергия',\r\n      tooltip: 'Обеспечение доступа к недорогостоящим источникам энергии в быту для приготовления пищи, отопления и освещения',\r\n    },\r\n    {\r\n      id: 5,\r\n      image: require('./assets/policies/policy05.jpg'),\r\n      title: 'Энергетика',\r\n      tooltip: 'Более широкое использование видов топлива с низким уровнем выбросов и возобновляемых источников энергии, не основанных на сжигании (таких как энергия солнца, ветра или гидроэнергия); комбинированная выработка тепла и энергии; и распределенная выработка энергии (например, энергетические минисистемы и размещаемые на крыше установки для выработки энергии из солнечной энергии)',\r\n    },\r\n    {\r\n      id: 6,\r\n      image: require('./assets/policies/policy06.jpg'),\r\n      title: 'Утилизация отходов',\r\n      tooltip: 'стратегии уменьшения отходов, сортировки отходов, рециклирования, повторного использования или переработки отходов; а также улучшенные методы биологической утилизации отходов, такие как анаэробная переработка отходов для производства биогаза, являются практически осуществимыми, недорогими альтернативными вариантами открытому сжиганию твердых отходов',\r\n    }\r\n  ];\r\n  \r\n  return (\r\n    <>\r\n      <HeroBlock title = { title }\r\n                  logos = { partners }\r\n                  links = { navLinks } \r\n                  winSize = { winSize }/>\r\n      <Facts title = { 'Основные факты' }\r\n              slides = { slides }\r\n              winSize = { winSize } />\r\n      <MapBlock title = { 'Индекс качества воздуха в режиме реального времени' }\r\n                capture = { 'Для того чтобы узнать уровень загрязнения атмосферного воздуха (качество воздуха) в городе Киев, необходимо выбрать соответствующую станцию мониторинга на карте выше.' } />\r\n      <Policies title = { 'Политика по уменьшению загрязнений' }\r\n                subtitle = { 'Есть много примеров успешной политики по уменьшению загрязнения воздуха в таких секторах, как транспорт, городское планирование, энергетика и промышленность:' }\r\n                cards = { cards } />\r\n      <Footer logos = { partners }\r\n              links = { navLinks } />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {useEffect, useState} from 'react';\r\n\r\nexport const useScreenSize = () => {\r\n  const [winSize, setWinSize] = useState(window.screen.availWidth);\r\n  const handleResize = () => setWinSize(window.screen.availWidth);\r\n  \r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleResize);\r\n    console.log(winSize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, [winSize])\r\n  \r\n  return winSize;\r\n};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}